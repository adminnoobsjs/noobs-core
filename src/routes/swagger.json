{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "The nooblyjs Service API's",
    "description": "This project ecapsulates all the api methods for the nooblyjs server"
  },
  "basePath": "/services/",
  "tags": [
    {
      "name": "Logging",
      "description": "Logging Controller"
    },
    {
      "name": "Caching",
      "description": "Caching Controller"
    },
    {
      "name": "Queueing",
      "description": "Queueing Controller"
    },
    {
      "name": "Files",
      "description": "Files Controller"
    },
    {
      "name": "Scheduling",
      "description": "Scheduling Controller"
    },
    {
      "name": "Searching",
      "description": "Searching Controller"
    },
    {
      "name": "Security",
      "description": "Security Controller"
    },
     {
      "name": "Worker",
      "description": "Worker Controller"
    },
    {
      "name": "Workflow",
      "description": "Workflow Controller"
    }
  ],
  "schemes": [
    "https", "http"
  ],
  "consumes": [
    "application/json",
    "application/text"
  ],
  "produces": [
    "application/json",
    "application/text"
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/logging/api/info/": {
      "post": {
        "tags": [
          "Logging"
        ],
        "summary": "log a message of type INFO",
        "description": "log a message of type INFO",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Add the information you want to log",
            "required": true,
            "type": "string",
            "default": "This is an INFO message"
          }
        ],
        "consumes": [
          "application/text"
        ],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/logging/api/warn": {
      "post": {
        "tags": [
          "Logging"
        ],
        "summary": "log a message of type WARNING",
        "description": "log a message of type WARNING",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Add the information you want to log",
            "default": "This is an WARN message"
          }
        ],
        "consumes": [
          "application/text"
        ],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/logging/api/error": {
      "post": {
        "tags": [
          "Logging"
        ],
        "summary": "log a message of type ERROR",
        "description": "log a message of type ERROR",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Add the information you want to log",
            "default": "This is an ERROR message"
          }
        ],
        "consumes": [
          "application/text"
        ],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/logging/api/status": {
      "get": {
        "tags": [
          "Logging"
        ],
        "summary": "Check the status of the endpoint",
        "description": "This endpoint will check that the logging endpoint is working",
        "parameters": [],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/caching/api/has/{key}": {
      "get": {
        "tags": [
          "Caching"
        ],
        "summary": "Checks if a key exists in the cache",
        "description": "Checks if a key exists in the cache",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Specify the key you want to check i",
            "required": true
          }
        ], 
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/caching/api/get/{key}": {
      "get": {
        "tags": [
          "Caching"
        ],
        "summary": "Returns the cache value for the supplied key",
        "description": "Returns the cache value for the supplied key",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Add the cache key you want to retrieve",
            "required": true
          }
        ],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/caching/api/set/{key}": {
      "post": {
        "tags": [
          "Caching"
        ],
        "summary": "Sets a cache value",
        "description": "Sets a cache value",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Add the information you want to cache",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Add the information you want to log"
          }
        ],
        "consumes": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/caching/api/delete/{key}": {
      "delete": {
        "tags": [
          "Caching"
        ],
        "summary": "Deletes a cache key",
        "description": "Deletes a cache key",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Set the key you want to delete",
            "required": true
          }
        ],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/queueing/api/enqueue/{queue}": {
      "post": {
        "tags": [
          "Queueing"
        ],
        "summary": "Enqueue the queue value for the supplied queue",
        "description": "Enqueue the queue value for the supplied queue",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "description": "The queue to be dequeued from",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Add the information you want to queue"
          }
        ],
        "consumes": [
          "application/test"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/queueing/api/dequeue/{queue}": {
      "get": {
        "tags": [
          "Queueing"
        ],
        "summary": "Returns the queue value for the supplied queue",
        "description": "Returns the queue value for the supplied queue",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "description": "The queue to be dequeued",
            "required": true
          }
        ],
        "produces": [
          "application/text"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/topics/api/subscribe/{topic}/{subscriber}": {
      "get": {
        "tags": [
          "Queueing"
        ],
        "summary": "Subscibes a subcriber to the topic",
        "description": "Subscibes a subcriber to the topic",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "description": "The topic to be added too",
            "required": true,
            "schema": {
              "type": "string",
              "$ref": "#/definitions/queueing"
            }
          },
          {
            "name": "subscriber",
            "in": "path",
            "description": "The subscriber to be added too",
            "required": true,
            "schema": {
              "type": "string",
              "$ref": "#/definitions/queueing"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/queueing"
            }
          }
        }
      }
    },
    "/topics/api/send/{topic}": {
      "post": {
        "tags": [
          "Queueing"
        ],
        "summary": "Send a value for the supplied topic",
        "description": "Send a value for the supplied topice",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "description": "The topic to be added too",
            "required": true,
            "schema": {
              "type": "string",
              "$ref": "#/definitions/queueing"
            }
          },
          {
            "name": "data",
            "in": "body",
            "description": "Add the information you want to queue",
            "schema": {
              "$ref": "#/definitions/queueing"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/queueing"
            }
          }
        }
      }
    },
    "/topics/api/receive/{topic}/{subscriber}": {
      "get": {
        "tags": [
          "Queueing"
        ],
        "summary": "Returns the queue value for the supplied queue",
        "description": "Returns the queue value for the supplied queue",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "description": "The topic to be added too",
            "required": true,
            "schema": {
              "type": "string",
              "$ref": "#/definitions/queueing"
            }
          },
          {
            "name": "subscriber",
            "in": "path",
            "description": "The subscriber to be added too",
            "required": true,
            "schema": {
              "type": "string",
              "$ref": "#/definitions/queueing"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/queueing"
            }
          }
        }
      }
    },
    "/scheduling/api/status": {
      "get": {
        "tags": [
          "Scheduling"
        ],
        "summary": "Determines the scheduling status",
        "description": "Returns a success if the scheduling is working",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/searching/api/status": {
      "get": {
        "tags": [
          "Searching"
        ],
        "summary": "Determines the searching status",
        "description": "Returns a success if the searching is working",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/security/api/status": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Determines the security status",
        "description": "Returns a success if the security is working",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/worker/api/status": {
      "get": {
        "tags": [
          "Worker"
        ],
        "summary": "Determines the worker status",
        "description": "Returns a success if the worker is working",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/workflow/api/status": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Determines the workflow status",
        "description": "Returns a success if the workflow is working",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "in": "header",
      "name": "api_key"
    }
  },
  "definitions": {
    "logging": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "caching": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "queueing": {
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "workflow": {
      "required": [
        "config"
      ],
      "properties": {
        "data": {
          "type": "string",
          "uniqueItems": true
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}